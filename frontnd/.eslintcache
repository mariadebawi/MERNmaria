[{"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/index.js":"1","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reportWebVitals.js":"2","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/App.js":"3","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Footer.js":"4","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Header.js":"5","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/HomeScreen.js":"6","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Product.js":"7","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Rating.js":"8","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/ProductScreen.js":"9","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/store.js":"10","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reducers/productReducer.js":"11","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/constantes/productConstants.js":"12","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/actions/productActions.js":"13","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Loader.js":"14","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Message.js":"15","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/CartScreen.js":"16","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reducers/cartReducer.js":"17","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/constantes/cartConstants.js":"18","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/actions/cartActions.js":"19","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reducers/userReducer.js":"20","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/constantes/userConstants.js":"21","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/LoginScreen.js":"22","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/actions/userActions.js":"23","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/FormContainer.js":"24","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/RegisterScreen.js":"25","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/ProfileScreen.js":"26","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/shippingScreen.js":"27","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/ShippingScreen.js":"28","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/CheckoutSteps.js":"29","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/PaymentScreen.js":"30","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/PlaceOrderScreen.js":"31","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reducers/orderReducer.js":"32","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/constantes/orderConstants.js":"33","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/actions/orderActions.js":"34"},{"size":380,"mtime":1610930665121,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1610708872626,"results":"37","hashOfConfig":"36"},{"size":1509,"mtime":1612867056373,"results":"38","hashOfConfig":"36"},{"size":408,"mtime":1610738929141,"results":"39","hashOfConfig":"36"},{"size":2261,"mtime":1612787051216,"results":"40","hashOfConfig":"36"},{"size":1086,"mtime":1610934248206,"results":"41","hashOfConfig":"36"},{"size":930,"mtime":1610748054961,"results":"42","hashOfConfig":"36"},{"size":1134,"mtime":1610747258935,"results":"43","hashOfConfig":"36"},{"size":4059,"mtime":1611016435842,"results":"44","hashOfConfig":"36"},{"size":1724,"mtime":1612869267117,"results":"45","hashOfConfig":"36"},{"size":1075,"mtime":1610935229196,"results":"46","hashOfConfig":"36"},{"size":363,"mtime":1610935210904,"results":"47","hashOfConfig":"36"},{"size":1318,"mtime":1610935210904,"results":"48","hashOfConfig":"36"},{"size":443,"mtime":1610934160699,"results":"49","hashOfConfig":"36"},{"size":276,"mtime":1610934274072,"results":"50","hashOfConfig":"36"},{"size":4117,"mtime":1612867062400,"results":"51","hashOfConfig":"36"},{"size":1621,"mtime":1612866165033,"results":"52","hashOfConfig":"36"},{"size":234,"mtime":1612864115916,"results":"53","hashOfConfig":"36"},{"size":1410,"mtime":1612864193526,"results":"54","hashOfConfig":"36"},{"size":2103,"mtime":1612821144376,"results":"55","hashOfConfig":"36"},{"size":836,"mtime":1612808206326,"results":"56","hashOfConfig":"36"},{"size":2295,"mtime":1612784507749,"results":"57","hashOfConfig":"36"},{"size":4082,"mtime":1612860538293,"results":"58","hashOfConfig":"36"},{"size":395,"mtime":1612776417246,"results":"59","hashOfConfig":"36"},{"size":3239,"mtime":1612817629248,"results":"60","hashOfConfig":"36"},{"size":4660,"mtime":1612821882527,"results":"61","hashOfConfig":"36"},{"size":2468,"mtime":1612861122846,"results":"62","hashOfConfig":"36"},{"size":2927,"mtime":1612864797708,"results":"63","hashOfConfig":"36"},{"size":1659,"mtime":1612863141656,"results":"64","hashOfConfig":"36"},{"size":1667,"mtime":1612864826989,"results":"65","hashOfConfig":"36"},{"size":6268,"mtime":1612869914850,"results":"66","hashOfConfig":"36"},{"size":529,"mtime":1612869224237,"results":"67","hashOfConfig":"36"},{"size":171,"mtime":1612869091619,"results":"68","hashOfConfig":"36"},{"size":962,"mtime":1612870619455,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"11cvuh6",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":5,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/index.js",[],["146","147"],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reportWebVitals.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/App.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Footer.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Header.js",["148","149"],"import React, { useState, useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Navbar, Nav, Container  , NavDropdown} from 'react-bootstrap'\n\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport {logout} from '../actions/userActions'\n\nconst Header = () => {\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector((state) => state.userLogin)\n\n    const { userInfo } = userLogin\n\n    \n\n\n\n    const logoutHandler = () => {\n       dispatch(logout())\n\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand > Ecommerce</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to='/cart'>\n                                <Nav.Link href=\"/cart\"> <i className=\"fas fa-shopping-cart\"></i>  Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                                ) : (\n                                <LinkContainer to='/login'>\n                                    <Nav.Link>\n                                        <i className='fas fa-user'></i> Sign In\n                                     </Nav.Link>\n                                </LinkContainer>\n                            )}\n\n\n\n                        </Nav>\n\n                    </Navbar.Collapse>\n                </Container>\n\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/HomeScreen.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Product.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Rating.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/ProductScreen.js",["150","151"],"import React , {useState ,  useEffect}  from 'react'\nimport {useDispatch , useSelector} from 'react-redux'\nimport {Link } from 'react-router-dom'\nimport {Row , Col , Image , ListGroup , Card , Button, ListGroupItem, Form} from 'react-bootstrap'\n\nimport Rating from '../components/Rating'\n\nimport { listProductDetails} from '../actions/productActions'\n\n\nimport Message from '../components/Message'\n\nimport Loader from '../components/Loader'\n\n\n\n\nconst ProductScreen = ({history ,match}) => {\n\n    const [qty , setQty] = useState(1)\n   \n    const dispatch = useDispatch()\n\n    const productDetails= useSelector(state=>state.productDetails)\n\n    const {loading , error , product} = productDetails\n\n     \n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id))\n          \n       }, [dispatch , match])\n\n\n    const addToCartHandler=() => {\n      history.push(`/cart/${match.params.id}?qty=${qty}`)\n \n    }\n\n\n\n\n    return (\n        <>\n           <Link to='/' className=\"btn btn-light my-3\"> GO Back </Link>\n\n           {loading ?  <Loader/>   : error ? <Message variant='danger'> {error}</Message>: (\n               <Row>\n               <Col md={6} >\n                   <Image  src={product.image} alt={product.name} fluid />\n               </Col>\n\n               <Col md={3} >\n                   <ListGroup variant='flush'>\n                       <ListGroup.Item>\n                           <h3>{product.name}</h3>\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                          <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                           Price = ${product.price}\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                           Description = ${product.description}\n                       </ListGroup.Item>\n                   </ListGroup>\n               </Col>\n\n\n               <Col md={3} >\n                   <ListGroup variant='flush'>\n                       <ListGroup.Item>\n                           <Row>\n                               <Col>Price :</Col>\n                               <Col><strong>${product.price}</strong></Col>\n                           </Row>\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                           <Row>\n                               <Col>Status :</Col>\n                               <Col>\n                                 {product.countInStock>0 ? 'In Stock' : 'Out Of Stock'}\n                               </Col>\n                           </Row>\n                        </ListGroup.Item>\n                        {product.countInStock>0 && (\n                               <ListGroup.Item>\n                               <Row>\n                                   <Col>Qty :</Col>\n                                   <Col>\n                                   <Form.Control as='select' value={qty} onChange={(e)=> setQty(e.target.value) }> \n                                       { \n                                        [...Array(product.countInStock).keys()].map((x) => (\n                                                <option key={x+1}  value={x+1}>{x+1}</option>\n                                            ))\n                                       }\n\n                                    </Form.Control>\n                                   </Col>\n                               </Row>\n                            </ListGroup.Item>\n                        )}\n                        <ListGroup.Item>\n\n                           <Button\n                            onClick={addToCartHandler}\n                            className='btn-block' type=\"button\" disabled={product.countInStock === 0 }> Add To Cart</Button>\n                        </ListGroup.Item>\n                      \n\n                   </ListGroup>\n               </Col>\n               \n           </Row>\n           )}\n\n\n           \n        </>\n    )\n}\n\nexport default ProductScreen\n","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/store.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reducers/productReducer.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/constantes/productConstants.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/actions/productActions.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Loader.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/Message.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/CartScreen.js",["152","153","154","155"],"import React , {useState ,  useEffect}  from 'react'\nimport {useDispatch , useSelector} from 'react-redux'\nimport {Link } from 'react-router-dom'\nimport {Row , Col , Image , ListGroup , Card , Button, ListGroupItem, Form} from 'react-bootstrap'\n\nimport Rating from '../components/Rating'\n\nimport { addToCart , removeFromCart} from '../actions/cartActions'\n\n\nimport Message from '../components/Message'\n\nimport Loader from '../components/Loader'\n\n\nconst CartScreen = ({match , location , history}) => {\n    //   /600322d5bdf63104cff32699?qty=6  ==> 600322d5bdf63104cff32699 : id ; ?qty=6 : location.search\n    const productId = match.params.id \n     \n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector((state) => state.cart)\n\n    const {cartItems} = cart \n\n   useEffect(() => {\n       if(productId){\n           dispatch(addToCart(productId, qty))\n       }\n   }, [dispatch , productId , qty])\n\n\n\n    \n   const removeFromCartHandler = (id) =>{\n      dispatch(removeFromCart(id))\n   }\n\n\n   const chechoutHandler= () =>{\n    console.log('shipping')\n    history.push('/login?redirect=shipping')\n}\n\n    return (\n        <Row>\n           <Col md={8}>\n\n               <h1>Shopping Cart </h1>\n\n               {cartItems.length === 0 ? <Message> Your cart is empty <Link to='/'> Go Back </Link></Message> : (\n                   \n                   <ListGroup cariant='flush'>\n                       {cartItems.map(item => (\n\n                           <ListGroup.Item key={item.product}>\n                               <Row>\n                                   <Col md={2}>\n                                       <Image src={item.image} alt='item.name' fluid rounded/>\n                                   </Col>\n                                   <Col md={3}>\n                                       <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                   </Col>\n\n                                   \n\n\n                                   <Col md={2}>\n                                      $ {item.price}\n                                   </Col>\n\n                                   <Col md={2}>\n                                   <Form.Control as='select' value={item.qty} onChange={(e)=> dispatch(addToCart(item.product ,\n                                       Number(e.target.value))) }> \n                                       { \n                                        [...Array(item.countInStock).keys()].map((x) => (\n                                                <option key={x+1}  value={x+1}>{x+1}</option>\n                                            ))\n                                       }\n\n                                    </Form.Control>\n                                   </Col>\n\n                                   <Col md={2}>\n                                       <Button type='button' variant='light'\n                                        onClick={() => removeFromCartHandler(item.product)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                   </Col>\n\n\n\n                               </Row>\n                           </ListGroup.Item>\n                       ))}\n                   </ListGroup>\n               )}\n\n\n\n           </Col>\n\n\n\n\n           <Col md={4}>\n               <Card>\n                   <ListGroup variant='flush'>\n                       <ListGroup.Item>\n                           <h2> Subtotal ({cartItems.reduce((acc , item) => acc+item.qty , 0)}) items</h2>\n                           ${cartItems.reduce((acc , item) => acc+item.qty*item.price , 0).toFixed(2)}\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                           <Button type='button' className='btn-block' disabled={cartItems.length ===0 } onClick={chechoutHandler}>Checkout</Button>\n                       </ListGroup.Item>\n                   </ListGroup>\n               </Card>\n           </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reducers/cartReducer.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/constantes/cartConstants.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/actions/cartActions.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reducers/userReducer.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/constantes/userConstants.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/LoginScreen.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/actions/userActions.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/FormContainer.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/RegisterScreen.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/ProfileScreen.js",["156"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\n\nimport FormContainer from '../components/FormContainer'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nimport { USER_UPDATE_PROFILE_RESET } from '../constantes/userConstants'\n\n\nimport { getUserDetails , updateUserProfile } from '../actions/userActions'\n\n\nconst ProfileScreen = ({  history }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [name, setName] = useState('')\n    const [confirmpassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n\n    const { loading, error, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n\n    const {userInfo } = userLogin\n\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n\n    const {success } = userUpdateProfile\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n          history.push('/login')\n        } else {\n          if (!user || !user.name || success) {\n            \n            dispatch({ type: USER_UPDATE_PROFILE_RESET })\n\n            dispatch(getUserDetails('profile'))\n          } \n          \n          else {\n            //console.log(user)\n            setName(user.name)\n            setEmail(user.email)\n          }\n        }\n      }, [dispatch,history, userInfo, user, success])\n\n      \n      const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmpassword) {\n          setMessage('Passwords do not match')\n        } else {\n         // console.log(user._id)\n          dispatch(updateUserProfile({ id: user._id, name, email, password }))\n        }\n      }\n    \n\n\n\n    return (\n        <Row>\n            <Col md={5}>\n                <FormContainer>\n                    <h3>User Profile</h3>\n\n                    {message && <Message variant='danger'> {message}</Message>}\n                    {success && <Message variant='success'> Updated Success</Message>}\n\n                    {loading && <Loader />}\n\n                    {error && <Message variant='danger'> {error}</Message>}\n\n\n                    <Form onSubmit={submitHandler}>\n\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                type='email'\n                                placeholder='Enter email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type='password'\n                                placeholder='Enter password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='confirmpassword'>\n                            <Form.Label>ConfirmPassword</Form.Label>\n                            <Form.Control\n                                type='password'\n                                placeholder='Confirm password'\n                                value={confirmpassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Button type='submit' variant=\"success\" className=\"btn-block\">  Update</Button>\n\n                    </Form>\n\n                   \n\n\n                </FormContainer>\n            </Col>\n\n            <Col md={7}>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/shippingScreen.js",["157","158","159","160","161","162","163","164"],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/ShippingScreen.js",["165"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Form } from 'react-bootstrap'\n\nimport FormContainer from '../components/FormContainer'\n\nimport CheckoutSteps from '../components/CheckoutSteps'\n\n\n\nimport { saveShippingAddress} from '../actions/cartActions'\n\n\n\nconst ShippingScreen = ({ history }) => {\n\n    const cart= useSelector(state=>state.cart)\n\n    const {shippingAddress} = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAdress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setpostalCode] = useState(shippingAddress.postalCode)\n    const [country, setcountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault() ;\n        dispatch(saveShippingAddress({address , city , postalCode , country}))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n\n            <CheckoutSteps  step1  step2 />\n\n            <h2>Shipping</h2>\n\n\n            <Form onSubmit={submitHandler}>\n\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter Address'\n                        value={address}\n                        onChange={(e) => setAdress(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter city'\n                        value={city}\n                        onChange={(e) => setCity(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter postal Code'\n                        value={postalCode}\n                        onChange={(e) => setpostalCode(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n\n\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter country'\n                        value={country}\n                        onChange={(e) => setcountry(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n             \n                <Button type='submit' variant=\"primary\"> Continue</Button>\n\n            </Form>\n\n\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/components/CheckoutSteps.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/PaymentScreen.js",["166"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Form , Col } from 'react-bootstrap'\n\nimport FormContainer from '../components/FormContainer'\n\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nimport { savePaymentMethod} from '../actions/cartActions'\n\n\n\nconst PaymentScreen  = ({history}) => {\n\n    const cart= useSelector(state=>state.cart)\n\n    const {shippingAddress} = cart\n\n    if(!shippingAddress){\n        history.push('/shipping')\n    }\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n  \n\n\n    const submitHandler = (e) => {\n        e.preventDefault() ;\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    \n    \n   return (\n        <FormContainer>\n\n            <CheckoutSteps  step1  step2 step3 />\n            \n            <h2>Method Payment</h2>\n\n\n            <Form onSubmit={submitHandler}>\n\n\n                <Form.Group controlId='paymentMethod'>\n                    <Form.Label >  Select Method</Form.Label>\n\n                <Col>\n                    <Form.Check \n                         type=\"radio\" label=\"PayPal or Credit Card\" id=\"PayPal\"\n                         name=\"paymentMethod\" value=\"PayPal\"\n                         checked  onChange={(e) => setPaymentMethod(e.target.value)}>\n\n                     </Form.Check>\n                </Col>\n\n                </Form.Group>\n\n                <Button type='submit' variant=\"primary\"> Continue</Button>\n\n            </Form>\n\n\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen \n","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/Screens/PlaceOrderScreen.js",["167","168","169"],"import React, { useState , useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Form, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\n\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nimport Message from '../components/Message'\n\nimport { createOrder} from '../actions/orderActions'\n\n\nconst PlaceOrderScreen = ({history}) => {\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    //calculate Prices \n     \n    const addDecimals = (num) => {\n        return (Math.round(num*100)/100).toFixed(2)\n    }\n\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc , item) => acc + item.price * item.qty , 0))\n\n    cart.shippingPrice = addDecimals(cart.cartItems > 100 ? 0 :100)\n\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    const orderCreate= useSelector(state=>state.orderCreate)\n\n    const {order , success , error} = orderCreate\n\n\n    useEffect(() => {\n        if(success){\n            history.push(`/orders/${order._id}`)\n            console.log('success ')\n        }\n   }, [history , success])\n  \n\n\n    const placeOrderHandler = (e) => {\n        e.preventDefault();\n        //console.log('placeorder')\n\n        dispatch(createOrder({\n            orderItems : cart.cartItems ,\n            shippingAddress : cart.shippingAddress ,\n            paymentMethod : cart.paymentMethod ,\n            itemsPrice : cart.itemsPrice ,\n            shippingPrice : cart.shippingPrice ,\n            taxPrice : cart.taxPrice ,\n            totalPrice :  cart.totalPrice \n        }))\n    }\n\n\n\n    return (\n        <>\n\n            <CheckoutSteps step1 step2 step3 step4 />\n\n            <h2>Place Order </h2>\n\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong> Address : {' '}</strong>\n                                {cart.shippingAddress.address} ,{cart.shippingAddress.city}{' '}\n                                {cart.shippingAddress.postalCode}{' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong> Method : {' '}</strong>\n                                {cart.paymentMethod}\n\n                            </p>\n                        </ListGroup.Item>\n\n\n                      \n                        <ListGroup.Item>\n                            <h2>Order Items </h2>\n                            {cart.cartItems.length === 0 ? <Message> Your cart is empty </Message> :\n                                (\n\n                                    <ListGroup cariant='flush'>\n                                        {cart.cartItems.map( (item , index) => (\n\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt='item.name' fluid rounded />\n                                                    </Col>\n                                                    <Col md={3}>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                         {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                    </Col>\n\n                                                </Row>\n\n                                            </ListGroup.Item>\n\n                                        ))}\n                                  </ListGroup>\n                                )}\n               \n                         </ListGroup.Item>\n\n                </ListGroup>\n                </Col>\n\n\n\n                <Col md={4}>\n               <Card>\n                   <ListGroup variant='flush'>\n                       <ListGroup.Item>\n                           <h2> Order Summary </h2>\n                       </ListGroup.Item>\n\n                       <ListGroup.Item>\n                           <Row>\n                               <Col> Items </Col>\n                               <Col> ${cart.itemsPrice}</Col>\n                           </Row>\n                       </ListGroup.Item>\n\n                       <ListGroup.Item>\n                           <Row>\n                               <Col> Shipping </Col>\n                               <Col> ${cart.shippingPrice}</Col>\n                           </Row>\n                       </ListGroup.Item>\n\n\n                       <ListGroup.Item>\n                           <Row>\n                               <Col> Tax </Col>\n                               <Col> ${cart.taxPrice}</Col>\n                           </Row>\n                       </ListGroup.Item>\n\n\n                       <ListGroup.Item>\n                           <Row>\n                               <Col> Total </Col>\n                               <Col> ${cart.totalPrice}</Col>\n                           </Row>\n                       </ListGroup.Item>\n\n\n                       <ListGroup.Item>\n                          {error &&  <Message variant='danger'> {error}</Message>}\n                       </ListGroup.Item>\n\n                       <ListGroup.Item>\n                           <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\n                       </ListGroup.Item>\n                   </ListGroup>\n               </Card>\n           </Col>\n           \n           \n           \n           \n           \n            </Row>\n        </>\n\n    )\n}\n\nexport default PlaceOrderScreen\n","/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/reducers/orderReducer.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/constantes/orderConstants.js",[],"/Users/maria/Documents/GitHub/MERNmaria/frontnd/src/actions/orderActions.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"178","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"179","line":4,"column":41,"nodeType":"176","messageId":"177","endLine":4,"endColumn":45},{"ruleId":"174","severity":1,"message":"180","line":4,"column":56,"nodeType":"176","messageId":"177","endLine":4,"endColumn":69},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"180","line":4,"column":56,"nodeType":"176","messageId":"177","endLine":4,"endColumn":69},{"ruleId":"174","severity":1,"message":"181","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":14},{"ruleId":"174","severity":1,"message":"182","line":13,"column":8,"nodeType":"176","messageId":"177","endLine":13,"endColumn":14},{"ruleId":"174","severity":1,"message":"183","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"184","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":21},{"ruleId":"174","severity":1,"message":"185","line":2,"column":23,"nodeType":"176","messageId":"177","endLine":2,"endColumn":34},{"ruleId":"174","severity":1,"message":"183","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"186","severity":2,"message":"187","line":11,"column":34,"nodeType":"176","endLine":11,"endColumn":42},{"ruleId":"186","severity":2,"message":"187","line":12,"column":29,"nodeType":"176","endLine":12,"endColumn":37},{"ruleId":"186","severity":2,"message":"187","line":13,"column":41,"nodeType":"176","endLine":13,"endColumn":49},{"ruleId":"186","severity":2,"message":"187","line":14,"column":35,"nodeType":"176","endLine":14,"endColumn":43},{"ruleId":"188","severity":2,"message":"189","line":21,"column":29,"nodeType":"176","messageId":"190","endLine":21,"endColumn":42},{"ruleId":"174","severity":1,"message":"183","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"183","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"191","line":4,"column":18,"nodeType":"176","messageId":"177","endLine":4,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":44,"column":7,"nodeType":"194","endLine":44,"endColumn":26,"suggestions":"195"},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Card' is defined but never used.","'ListGroupItem' is defined but never used.","'Rating' is defined but never used.","'Loader' is defined but never used.","'Link' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"shippingScreen\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'submitHandler' is not defined.","undef","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},"Update the dependencies array to be: [history, order._id, success]",{"range":"201","text":"202"},[1266,1285],"[history, order._id, success]"]